<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.3.5">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/spring-guides/gs-handling-form-submission.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>Java 1.7</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.gradle.Gradle plugin="gradle@1.24">
      <description></description>
      <switches>-Pbuildversion=$BUILD_NUMBER</switches>
      <tasks>build</tasks>
      <rootBuildScriptDir>${workspace}/complete</rootBuildScriptDir>
      <buildFile></buildFile>
      <gradleName>Gradle_2.3</gradleName>
      <useWrapper>false</useWrapper>
      <makeExecutable>false</makeExecutable>
      <fromRootBuildScriptDir>false</fromRootBuildScriptDir>
      <useWorkspaceAsHome>false</useWorkspaceAsHome>
    </hudson.plugins.gradle.Gradle>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.26">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>VAPP_NAME=linuxsb_vapp
VM_NAME=linuxsb</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>create_ubuntu</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
              <completeBuild>true</completeBuild>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
    <hudson.tasks.Shell>
      <command># Call the Chef Client on the dev server to Config the Server
cd ~/chef-repo
knife bootstrap linuxsb -x ubuntu --sudo --run-list  &apos;recipe[SB1]&apos;
#knife ssh linuxsb &apos;sudo chef-client&apos; --manual-list --ssh-user ubuntu -i ~/.ssh/ubuntu_rsa --no-host-key-verify

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Move the executable
scp -o StrictHostKeyChecking=no /var/lib/jenkins/jobs/springBootForm/workspace/complete/build/libs/gs-handling-form-submission-0.1.0.jar ubuntu@linuxsb:~
ssh ubuntu@linuxsb chmod +x gs-handling-form-submission-0.1.0.jar 

# Stop the App if a previous version is running
ssh --no-host-key-verify  ubuntu@linuxsb export JPID=`netstat -plnt | grep 8080 | awk &apos;{print $7}&apos; | cut -d/ -f1`; if [[ -n $JPID ]]; then kill $JPID; fi

# Start the App
ssh --no-host-key-verify  ubuntu@linuxsb &quot;nohup java -jar ~/gs-handling-form-submission-0.1.0.jar &gt; log.out 2&gt; log.err &lt; /dev/null &amp;&quot;

# create a port mapping to the app
export SERVER_IP=`grep linuxsb /etc/hosts | cut -d&apos; &apos; -f1`
sudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 8080 -m conntrack --ctstate NEW -j DNAT --to ${SERVER_IP}:8080

# Test with wget
wget http://linuxsb:8080/greeting
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
