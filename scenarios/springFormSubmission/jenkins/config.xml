<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.29">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>VAPP_NAME=$VAPP_NAME
VM_NAME=$VM_NAME</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>create_ubuntu</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
              <completeBuild>true</completeBuild>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
    <hudson.tasks.Shell>
      <command># Lookup the ip of the target node, login completed on create_ubuntu step

export SERVER_IP=`vca vm -a ${VAPP_NAME} | grep ${VM_NAME} | cut -d &apos;|&apos; -f5 | tr -d &apos;[[:space:]]&apos;`

cd /home/ubuntu/vcadevops/chef-repo

knife client list

if [ ${SERVER_IP} -gt 0 ]
then

  # See if the server (maybe new) is registered with the chef-server
  sudo /home/ubuntu/vcadevops/scenarios/jenkins/check_chef_node.sh ${VM_NAME} ${SERVER_IP}

  # Run the chef client to configure the server
  knife ssh ${VM_NAME} &apos;sudo chef-client&apos; --manual-list --ssh-user ubuntu -i ~/.ssh/ubuntu_rsa --no-host-key-verify

  # Move the executable
  scp -o StrictHostKeyChecking=no /var/lib/jenkins/jobs/spring_boot_form/workspace/complete/build/libs/gs-handling-form-submission-0.1.0.jar ubuntu@${VM_NAME}:~
  ssh -o &apos;StrictHostKeyChecking=no&apos; ubuntu@${VM_NAME} chmod +x gs-handling-form-submission-0.1.0.jar 

  # Stop the App if a previous version is running
  ssh -o &apos;StrictHostKeyChecking=no&apos;  ubuntu@${VM_NAME} export JPID=`netstat -plnt | grep 8080 | awk &apos;{print $7}&apos; | cut -d/ -f1`; if [[ -n $JPID ]]; then kill $JPID; fi

  # Start the App
  ssh -o &apos;StrictHostKeyChecking=no&apos;  ubuntu@${VM_NAME} &quot;nohup java -jar ~/gs-handling-form-submission-0.1.0.jar &gt; log.out 2&gt; log.err &lt; /dev/null &amp;&quot;

  # create a port mapping to the app using iptables
  sudo /home/ubuntu/vcadevops/scenarios/jenkins/add_iptable_nat.sh 8080 ${SERVER_IP} 8080

  # Run Selenium test
  echo &quot;&lt;= Run Selenium Test&quot;
  python /home/ubuntu/vcadevops/scenarios/springFormSubmission/selenium/formtest.py


  echo &quot;Test with http://devops.vcloudair.io:8080/greeting&quot;
else
  echo &quot;Error: Server not found&quot;
  return -1
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <EnvInjectBuildWrapper plugin="envinject@1.92.1">
      <info>
        <propertiesContent># Set constants for Vapp and VM 
# Rather than let user set values with parameterized build to avoid too many vms.

VAPP_NAME=vApp4
VM_NAME=s4ubu_c
</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
  </buildWrappers>
</project>