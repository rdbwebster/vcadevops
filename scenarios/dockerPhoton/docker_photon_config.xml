<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>The job demonstrates the deployment of a NGINX web server container to a Photon Server.&#xd;
The photon server will be created if it does not exist (using create_photon)</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(Default)</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.26">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>VAPP_NAME=${VAPP_NAME}
VM_NAME=${VM_NAME}
</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>create_photon</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
              <completeBuild>true</completeBuild>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
    <hudson.tasks.Shell>
      <command>echo &quot;=&gt; Login to vCloud Air previously done by &apos;Check for existing server&apos; job&quot;
echo &quot;=&gt; Get Server IP&quot;
export SERVER_IP=$(vca vm -a $VAPP_NAME | grep $VM_NAME | cut -d &apos;|&apos; -f5 | sed -e &apos;s/^[[:space:]]*//&apos;)

# check for existing container deployment
echo &quot;=&gt; Check for existing container deployment&quot;
export name=`sshpass -e ssh -t -v root@${SERVER_IP} &quot;docker ps | grep nginx&quot; `
export name=$(echo $name | awk &apos;{ print $NF }&apos;)

# stop container and remove if present
if [ ${#name} -gt 1 ]
  then
  echo &quot;=&gt; Removing existing container named ${name} &quot;
  
  sshpass -e ssh -t root@${SERVER_IP} docker stop ${name} 
  sshpass -e ssh -t root@${SERVER_IP} docker rm ${name}
fi

# install nginx container and start
echo &quot;=&gt; Deploy Container vmwarecna/nginx&quot;
sshpass -e ssh -t root@${SERVER_IP} &quot;docker run -d -p 80:80 vmwarecna/nginx &amp;&amp; docker ps&quot;

# create a port mapping to the app 
sudo /home/ubuntu/vcadevops/scenarios/jenkins/add_iptable_nat.sh 9999 ${SERVER_IP} 80

# Test with browser using url 
echo &quot;=&gt; Test with browser http://devops.vcair.us:9999&quot;
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <EnvInjectBuildWrapper plugin="envinject@1.91.2">
      <info>
        <propertiesContent>VAPP_NAME=photonTestApp
VM_NAME=photonTestVM</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <EnvInjectPasswordWrapper plugin="envinject@1.91.2">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>VCA_PASSWORD</name>
          <value>Hy4LyJbLh2Jf8PqDgO4IrDVg4sXK08WaIv33ATuxqho=</value>
        </EnvInjectPasswordEntry>
        <EnvInjectPasswordEntry>
          <name>SSHPASS</name>
          <value>9F+bQqVw0XLTlVB/+Dt0MN26xISUc9yUv0gDXaq2Z0M=</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
  </buildWrappers>
</project>
