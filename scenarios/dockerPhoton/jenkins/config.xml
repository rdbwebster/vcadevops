<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>The job demonstrates the deployment of a NGINX web server container to a Photon Server.&#xd;
The photon server will be created if it does not exist.&#xd;
This job has a dependency on the Jenkins EnvInject Plugin</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># Remove &quot;&quot; from input variables if present
VAPP_NAME=`sed -e &apos;s/^&quot;//&apos; -e &apos;s/&quot;$//&apos; &lt;&lt;&lt; $VAPP_NAME`
VM_NAME=`sed -e &apos;s/^&quot;//&apos; -e &apos;s/&quot;$//&apos; &lt;&lt;&lt; $VM_NAME`

# Login to vCloud Air vchs

#vca login --password $VCA_PASSWORD --save-password --host vchs.vmware.com --type subscription --version 5.6 --org M933009684-4424  vcadevops@gmail.com
#vca vdc use --vdc M933009684-4424

# Login to vCloud Air onDemand
vca login  appstech@websterx.com --password ${VCA_PASSWORD} --instance &apos;97453e02-e83c-4cae-bbe9-3f7ee6dd8401&apos; 
vca vdc use --vdc DevOps-VDC

export SERVER_IP=`vca vm -a $VAPP_NAME | grep $VM_NAME | cut -d &apos;|&apos; -f5 | tr -d &apos;[[:space:]]&apos;` &amp;&amp; echo $SERVER_IP

# Create new Photon Server and start docker, skip if Server already exists 
if [ ${#SERVER_IP} -lt 1 ]
  then
    vca vapp create -a $VAPP_NAME -V $VM_NAME -c &apos;Public Catalog&apos; -t &apos;VMware Photon OS - Tech Preview 2&apos;  -n default-routed-network  -m pool
    vca vapp power-on --vapp $VAPP_NAME

  # get the new vm ip 
  SERVER_IP=`/home/ubuntu/vcadevops/scenarios/jenkins/wait_boot_ip.sh $VAPP_NAME $VM_NAME`
  
  # Add host entry 
  sudo /home/ubuntu/vcadevops/scenarios/jenkins/add_host_entry.sh ${SERVER_IP} ${VM_NAME}

  # Get the initial root password
  export SSHPASS=$(vca vapp info --vapp $VAPP_NAME | grep admin_password | cut -d&apos;|&apos; -f4)
  # Remove leading and trailing spaces
  SSHPASS=`sed -e &apos;s/^&quot;//&apos; -e &apos;s/&quot;$//&apos; &lt;&lt;&lt; $SSHPASS`
  
  # ssh to Proton Server and enable and start Docker
  sshpass  -e ssh -o StrictHostKeyChecking=no -t -v root@${IP} &quot;systemctl enable docker &amp;&amp; systemctl start docker &amp;&amp; systemctl status docker&quot; 

else  

  # Get the initial root password
  export SSHPASS=$(vca vapp info --vapp $VAPP_NAME | grep admin_password | cut -d&apos;|&apos; -f4)
  # Remove leading and trailing spaces
  SSHPASS=`sed -e &apos;s/^&quot;//&apos; -e &apos;s/&quot;$//&apos; &lt;&lt;&lt; $SSHPASS`

fi

# check for existing container deployment
echo &quot;=&gt; Check for existing container deployment&quot;
export name=`sshpass -e ssh -t -v root@${SERVER_IP} &quot;docker ps | grep nginx&quot; `
export name=$(echo $name | awk &apos;{ print $NF }&apos;)

# stop container and remove if present
if [ ${#name} -gt 1 ]
  then
  echo &quot;=&gt; Removing existing container named ${name} &quot;
  
  sshpass -e ssh  -o StrictHostKeyChecking=no -t root@${SERVER_IP} docker stop ${name} 
  sshpass -e ssh  -o StrictHostKeyChecking=no -t root@${SERVER_IP} docker rm ${name}
fi

# install nginx container and start
echo &quot;=&gt; Deploy Container vmwarecna/nginx&quot;
sshpass -e ssh -t root@${SERVER_IP} &quot;docker run -d -p 80:80 vmwarecna/nginx &amp;&amp; docker ps&quot;

# create a port mapping to the app using iptables
sudo /home/ubuntu/vcadevops/scenarios/jenkins/add_iptable_nat.sh 9999 ${SERVER_IP} 80

# Test with browser using url 
echo &quot;=&gt; Test with browser http://devops.vcair.us:9999&quot;
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <EnvInjectBuildWrapper plugin="envinject@1.92.1">
      <info>
        <propertiesContent>VAPP_NAME=vApp1
VM_NAME=s1pho</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <EnvInjectPasswordWrapper plugin="envinject@1.92.1">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>VCA_PASSWORD</name>
          <value>EKvLs32P7c4qvfTpgrv8mxcTFP3XIRlUtDxD/WKvR6M=</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
  </buildWrappers>
</project>